<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:p="http://www.springframework.org/schema/p"
        xmlns:context="http://www.springframework.org/schema/context"
        xmlns:mvc="http://www.springframework.org/schema/mvc"
        xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
                http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
                http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd">

    <!--  APPscan -->
    <bean id="webSecurityInterceptor" class="tce.web.WebSecurityInterceptor" /> 
    
    <!--  @Controller 컴포넌트 스캔 시작 -->
    <context:component-scan base-package="tce.**.web" />
    <context:component-scan base-package="tce.cmm.exception" />
    
    <!-- DKC 보안관련 처리를 위한 Interceptor -->
    <bean id="mgrInterceptor" class="tce.cmm.MgrInterceptor" />
    <mvc:annotation-driven />
    <!-- DKC Interceptor 적용을 위한 선언 -->    
    <bean id="webMvcConfig" class="tce.cmm.WebMvcConfig" />
    <!--  @Controller 컴포넌트 스캔 끝 -->
    
    <!-- LocaleResolver 선언 시작 -->
    <!-- 세션을 이용한 Locale 정보 사용  -->
    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver" />
    <!-- LocaleResolver 선언 끝 -->

    <!-- Validation 사용을 위한 Hibernate validator-->
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="validationMessageSource" ref="messageSource" />
    </bean>
    <!-- HandlerAdapter 선언 끝 -->

    <!-- HandlerExceptionResolvers 선언 시작 -->
    <!--
        - ServletContext 상의 Exception 발생에 따른 처리를 담당
        - 각 Exception 타입별 View설정
    -->
    <bean class="able.com.exception.resolver.MappingExceptionResolver">
        <property name="interceptor" value="able.com.exception.resolver.DefaultExceptionServiceImpl"/>
        
        <property name="defaultErrorView" value="com/error/error"/>
        <property name="exceptionMappings">
            <props>
            	<prop key="org.springframework.dao.DataAccessException">com/error/error</prop>
                <prop key="org.springframework.transaction.TransactionException">com/error/error</prop>
                <prop key="able.com.exception.BizException">com/error/error</prop>
                <prop key="org.springframework.security.AccessDeniedException">com/error/error</prop>
            </props>
        </property>
    </bean>
    <!-- HandlerExceptionResolvers 선언 끝 -->
 
    <!-- ViewResolver 선언 시작 -->
    <!-- View를 선택하는 ViewResolver 설정 -->
    <!-- JSTL(JSP) View 설정
        - Controller에서 "vets" 라는 view 이름을 리턴할 경우,
        - prefix와 suffix를 합하여 적절한 view를 찾는다.
        - 예) prefix(/WEB-INF/jsp/) + "vets" + suffix(.jsp) = "/WEB-INF/jsp/vets.jsp"
    -->
    <!-- Tiles -->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/jsp/" />
        <property name="suffix" value=".jsp" />
        <property name="order"  value="2" />  <!-- tiles3 설정 -->
    </bean>
    <bean id="tilesViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView" />
        <property name="order"     value="1" />
    </bean>
    <bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
        <property name="definitions">
            <list>
                <value>/WEB-INF/config/tiles/tiles.xml</value>
            </list>
        </property>
    </bean>        
    
    <!-- Controller에서 처리 로직이 없이 바로 view로 이동하는 경우에 사용하는 Controller
       DispatcherServlet을 거쳐야 하지만, html 위주의 static한 페이지를 보여줄때 사용
       URL path가 곧 뷰이름이 되며, prefix와 suffix를 지정할수도 있다.
     -->
    <bean id="urlFilenameViewController" class="org.springframework.web.servlet.mvc.UrlFilenameViewController"/>

     <!--  jsonView (jackson) 설정.
        - jackson을 이용한 object,json 간의 mapper 사용 view 
     -->
    <bean id="jsonMapper" class="com.fasterxml.jackson.databind.ObjectMapper"/>
    <bean id="jsonView" class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
        <property name="objectMapper" ref="jsonMapper" /> 
    </bean>
    
    <!-- BeanNameViewResolver
        - view 이름과 bean 이름(name,id)가 일치하는 view 사용
    -->
    <bean id="beanNameResolver" class="org.springframework.web.servlet.view.BeanNameViewResolver" p:order="0"/>
    
</beans>